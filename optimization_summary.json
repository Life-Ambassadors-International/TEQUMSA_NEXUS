{
  "timestamp": "2025-09-30T00:47:18.038458",
  "repository_path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS",
  "summary": {
    "overall_score": 76,
    "status": "Fair",
    "priority_breakdown": {
      "high": 1,
      "medium": 4,
      "low": 4
    },
    "key_metrics": {
      "repository_health": {
        "score": 85,
        "total_files": 85,
        "test_coverage": 11.428571428571429
      },
      "dependencies": {
        "total_dependencies": 3,
        "outdated_packages": 53,
        "security_vulnerabilities": 0
      },
      "performance": {
        "score": 74,
        "optimization_opportunities": 4
      },
      "repository_cleanup": {
        "large_files": 9,
        "stale_branches": 0
      }
    },
    "top_concerns": [
      {
        "source": "health",
        "category": "Testing",
        "description": "Low test coverage detected. Consider adding more tests.",
        "priority": "high",
        "priority_score": 3,
        "impact": "reliability",
        "actions": [],
        "context": "Repository Health"
      }
    ],
    "quick_wins": []
  },
  "recommendations": [
    {
      "source": "health",
      "category": "Testing",
      "description": "Low test coverage detected. Consider adding more tests.",
      "priority": "high",
      "priority_score": 3,
      "impact": "reliability",
      "actions": [],
      "context": "Repository Health"
    },
    {
      "source": "dependencies",
      "category": "updates",
      "description": "Found 53 outdated Python packages",
      "priority": "medium",
      "priority_score": 2,
      "impact": "Unknown",
      "actions": [],
      "context": "Dependency Management"
    },
    {
      "source": "performance",
      "category": "function_size",
      "description": "Found 23 large functions",
      "priority": "medium",
      "priority_score": 2,
      "impact": "maintainability",
      "actions": [],
      "context": "Performance Optimization"
    },
    {
      "source": "performance",
      "category": "complexity",
      "description": "Found 58 complex functions",
      "priority": "medium",
      "priority_score": 2,
      "impact": "maintainability",
      "actions": [],
      "context": "Performance Optimization"
    },
    {
      "source": "performance",
      "category": "large_files",
      "description": "Found 1 large files that may impact performance",
      "priority": "medium",
      "priority_score": 2,
      "impact": "Unknown",
      "actions": [],
      "context": "Performance Optimization"
    },
    {
      "source": "health",
      "category": "File Size",
      "description": "Found 8 large files. Consider using Git LFS or optimization.",
      "priority": "low",
      "priority_score": 1,
      "impact": "performance",
      "actions": [],
      "context": "Repository Health"
    },
    {
      "source": "health",
      "category": "Git Activity",
      "description": "Low commit frequency. Consider more frequent, smaller commits.",
      "priority": "low",
      "priority_score": 1,
      "impact": "collaboration",
      "actions": [],
      "context": "Repository Health"
    },
    {
      "source": "git_cleanup",
      "category": "Storage Optimization",
      "description": "Found 9 large files totaling 36.9MB",
      "priority": "low",
      "priority_score": 1,
      "impact": "Unknown",
      "actions": [
        "Consider using Git LFS for large files",
        "Move large assets to external storage",
        "Compress or optimize large files",
        "Remove unnecessary large files"
      ],
      "context": "Repository Cleanup"
    },
    {
      "source": "performance",
      "category": "imports",
      "description": "Common imports across files: math, typing, json, os, sys",
      "priority": "low",
      "priority_score": 1,
      "impact": "organization",
      "actions": [],
      "context": "Performance Optimization"
    }
  ],
  "detailed_analysis": {
    "health": {
      "timestamp": "2025-09-30T00:45:12.575239",
      "repository_path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS",
      "health_score": 85,
      "metrics": {
        "structure": {
          "total_files": 85,
          "code_files": 37,
          "documentation_files": 25,
          "config_files": 7,
          "large_files": [
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/Infinite Engine.png",
              "size_mb": 1.89
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/TEQUMSA_SOURCE.tar.gz",
              "size_mb": 11.03
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/Quasar_Blackhole Engine.png",
              "size_mb": 1.85
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/frontend/assets/images/image4.png",
              "size_mb": 2.24
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/frontend/assets/images/image2.png",
              "size_mb": 3.06
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/frontend/assets/images/image1.png",
              "size_mb": 1.91
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/frontend/assets/images/image3.png",
              "size_mb": 1.73
            },
            {
              "path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS/frontend/assets/images/image5.png",
              "size_mb": 2.15
            }
          ],
          "orphaned_files": [],
          "directory_structure_score": 100.0
        },
        "git": {
          "commit_frequency": 2,
          "branch_count": 1,
          "active_branches": 0,
          "last_commit_days": 0,
          "commit_message_quality": 50.0,
          "merge_conflicts_potential": 0
        },
        "quality": {
          "python_files": 27,
          "javascript_files": 8,
          "test_coverage_estimated": 11.428571428571429,
          "documentation_coverage": 100,
          "complexity_score": 80
        },
        "dependencies": {
          "python_dependencies": 3,
          "node_dependencies": 5,
          "outdated_dependencies": [],
          "security_vulnerabilities": 0,
          "dependency_health_score": 100
        }
      },
      "recommendations": [
        {
          "category": "File Size",
          "description": "Found 8 large files. Consider using Git LFS or optimization.",
          "priority": "low",
          "impact": "performance"
        },
        {
          "category": "Git Activity",
          "description": "Low commit frequency. Consider more frequent, smaller commits.",
          "priority": "low",
          "impact": "collaboration"
        },
        {
          "category": "Testing",
          "description": "Low test coverage detected. Consider adding more tests.",
          "priority": "high",
          "impact": "reliability"
        }
      ],
      "summary": {
        "total_files": 85,
        "code_files": 37,
        "test_coverage": 11.428571428571429,
        "commit_frequency": 2,
        "last_commit_days": 0
      }
    },
    "dependencies": {
      "timestamp": "2025-09-30T00:45:33.359738",
      "summary": {
        "total_python_dependencies": 3,
        "total_nodejs_dependencies": 0,
        "total_dependencies": 3,
        "outdated_packages": 53,
        "security_vulnerabilities": 0
      },
      "python_analysis": {
        "total_dependencies": 3,
        "outdated_count": 53,
        "security_issues": 0,
        "dependencies": [
          "flask==3.0.2",
          "flask-cors==4.0.0",
          "requests==2.31.0"
        ],
        "recommendations": [
          {
            "type": "updates",
            "description": "Found 53 outdated Python packages",
            "priority": "medium",
            "packages": [
              "attrs",
              "Automat",
              "Babel",
              "bcrypt",
              "blinker"
            ]
          }
        ]
      },
      "nodejs_analysis": {
        "total_dependencies": 0,
        "dev_dependencies": 5,
        "outdated_count": 0,
        "security_issues": 0,
        "dependencies": {
          "production": {},
          "development": {
            "eslint": "^8.57.0",
            "prettier": "^3.0.0",
            "http-server": "^14.1.1",
            "html-validate": "^8.0.0",
            "pa11y-ci": "^3.1.0"
          }
        },
        "recommendations": []
      },
      "recommendations": [
        {
          "type": "updates",
          "description": "Found 53 outdated Python packages",
          "priority": "medium",
          "packages": [
            "attrs",
            "Automat",
            "Babel",
            "bcrypt",
            "blinker"
          ]
        }
      ],
      "optimization_score": 70
    },
    "git_cleanup": {
      "timestamp": "2025-09-30T00:47:11.232736",
      "repository_path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS",
      "analysis": {
        "large_files": [
          {
            "path": "TEQUMSA_SOURCE.tar.gz",
            "size_mb": 11.03,
            "type": "current"
          },
          {
            "path": "TEQUMSA_SOURCE.tar.gz",
            "size_mb": 11.03,
            "type": "historical",
            "object_hash": "2f71bb30fb5876666429524d8bfa1ead2017eb86"
          },
          {
            "path": "frontend/assets/images/image2.png",
            "size_mb": 3.06,
            "type": "current"
          },
          {
            "path": "frontend/assets/images/image4.png",
            "size_mb": 2.24,
            "type": "current"
          },
          {
            "path": "frontend/assets/images/image5.png",
            "size_mb": 2.15,
            "type": "current"
          },
          {
            "path": "frontend/assets/images/image1.png",
            "size_mb": 1.91,
            "type": "current"
          },
          {
            "path": "Infinite Engine.png",
            "size_mb": 1.89,
            "type": "current"
          },
          {
            "path": "Quasar_Blackhole Engine.png",
            "size_mb": 1.85,
            "type": "current"
          },
          {
            "path": "frontend/assets/images/image3.png",
            "size_mb": 1.73,
            "type": "current"
          }
        ],
        "branches": {
          "total_branches": 4,
          "active_branches": [
            {
              "name": "copilot/fix-b277bb95-714c-47b3-9427-c2fb176e52da",
              "days_old": 0,
              "author": "copilot-swe-agent[bot]",
              "last_commit_time": 1759192534
            },
            {
              "name": "main",
              "days_old": 0,
              "author": "Marcus Banks-Bey",
              "last_commit_time": 1759181127
            },
            {
              "name": "repo-optimization-automation",
              "days_old": 0,
              "author": "Marcus Banks-Bey",
              "last_commit_time": 1759192069
            },
            {
              "name": "origin/copilot/fix-b277bb95-714c-47b3-9427-c2fb176e52da",
              "days_old": 0,
              "author": "copilot-swe-agent[bot]",
              "last_commit_time": 1759192534
            }
          ],
          "stale_branches": [],
          "merged_branches": [],
          "recommendations": []
        },
        "commits": {
          "total_commits": 2,
          "recent_commits": 2,
          "large_commits": [],
          "commit_frequency": {},
          "recommendations": []
        },
        "duplicates": []
      },
      "recommendations": [
        {
          "category": "Storage Optimization",
          "type": "large_files",
          "description": "Found 9 large files totaling 36.9MB",
          "priority": "low",
          "actions": [
            "Consider using Git LFS for large files",
            "Move large assets to external storage",
            "Compress or optimize large files",
            "Remove unnecessary large files"
          ]
        }
      ],
      "summary": {
        "large_files_count": 9,
        "stale_branches_count": 0,
        "total_commits": 2,
        "potential_duplicates": 0
      }
    },
    "performance": {
      "timestamp": "2025-09-30T00:47:11.360512",
      "repository_path": "/home/runner/work/TEQUMSA_NEXUS/TEQUMSA_NEXUS",
      "overall_performance_score": 74,
      "python_analysis": {
        "total_files": 27,
        "large_functions": [
          {
            "name": "animate",
            "file": "gaia_avatar.py",
            "line_count": 81,
            "start_line": 28,
            "complexity_score": 27,
            "has_docstring": false
          },
          {
            "name": "main",
            "file": "scripts/check_secrets.py",
            "line_count": 53,
            "start_line": 481,
            "complexity_score": 5,
            "has_docstring": true
          },
          {
            "name": "check_dependencies",
            "file": "scripts/check_secrets.py",
            "line_count": 65,
            "start_line": 119,
            "complexity_score": 66,
            "has_docstring": true
          },
          {
            "name": "generate_security_report",
            "file": "scripts/check_secrets.py",
            "line_count": 62,
            "start_line": 232,
            "complexity_score": 41,
            "has_docstring": true
          },
          {
            "name": "generate_security_runbook",
            "file": "scripts/check_secrets.py",
            "line_count": 184,
            "start_line": 295,
            "complexity_score": 14,
            "has_docstring": true
          },
          {
            "name": "generate_markdown_report",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 103,
            "start_line": 196,
            "complexity_score": 50,
            "has_docstring": true
          },
          {
            "name": "analyze_python_dependencies",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 81,
            "start_line": 27,
            "complexity_score": 75,
            "has_docstring": true
          },
          {
            "name": "analyze_nodejs_dependencies",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 102,
            "start_line": 109,
            "complexity_score": 93,
            "has_docstring": true
          },
          {
            "name": "generate_optimization_recommendations",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 59,
            "start_line": 212,
            "complexity_score": 41,
            "has_docstring": true
          },
          {
            "name": "analyze_python_performance",
            "file": "scripts/performance_optimizer.py",
            "line_count": 53,
            "start_line": 28,
            "complexity_score": 45,
            "has_docstring": true
          },
          {
            "name": "analyze_file_structure_performance",
            "file": "scripts/performance_optimizer.py",
            "line_count": 55,
            "start_line": 200,
            "complexity_score": 45,
            "has_docstring": true
          },
          {
            "name": "run_analysis",
            "file": "scripts/performance_optimizer.py",
            "line_count": 53,
            "start_line": 326,
            "complexity_score": 29,
            "has_docstring": true
          },
          {
            "name": "analyze_large_files",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 56,
            "start_line": 29,
            "complexity_score": 56,
            "has_docstring": true
          },
          {
            "name": "analyze_branches",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 86,
            "start_line": 86,
            "complexity_score": 86,
            "has_docstring": true
          },
          {
            "name": "analyze_commit_history",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 68,
            "start_line": 173,
            "complexity_score": 64,
            "has_docstring": true
          },
          {
            "name": "generate_cleanup_recommendations",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 61,
            "start_line": 279,
            "complexity_score": 58,
            "has_docstring": true
          },
          {
            "name": "analyze_repository_structure",
            "file": "scripts/repo_health_check.py",
            "line_count": 64,
            "start_line": 27,
            "complexity_score": 52,
            "has_docstring": true
          },
          {
            "name": "analyze_git_health",
            "file": "scripts/repo_health_check.py",
            "line_count": 71,
            "start_line": 92,
            "complexity_score": 64,
            "has_docstring": true
          },
          {
            "name": "analyze_code_quality",
            "file": "scripts/repo_health_check.py",
            "line_count": 71,
            "start_line": 164,
            "complexity_score": 47,
            "has_docstring": true
          },
          {
            "name": "main",
            "file": "scripts/generate_tests.py",
            "line_count": 77,
            "start_line": 310,
            "complexity_score": 27,
            "has_docstring": true
          },
          {
            "name": "analyze_python_file",
            "file": "scripts/generate_tests.py",
            "line_count": 56,
            "start_line": 28,
            "complexity_score": 58,
            "has_docstring": true
          },
          {
            "name": "generate_test_file",
            "file": "scripts/generate_tests.py",
            "line_count": 87,
            "start_line": 204,
            "complexity_score": 30,
            "has_docstring": true
          },
          {
            "name": "chat",
            "file": "backend/ai_service.py",
            "line_count": 51,
            "start_line": 88,
            "complexity_score": 21,
            "has_docstring": true
          }
        ],
        "complex_functions": [
          {
            "name": "technical_infrastructure",
            "file": "gaia_tequmsa_architecture.py",
            "line_count": 40,
            "start_line": 19,
            "complexity_score": 39,
            "has_docstring": true
          },
          {
            "name": "indigenous_global_access",
            "file": "gaia_tequmsa_architecture.py",
            "line_count": 16,
            "start_line": 70,
            "complexity_score": 13,
            "has_docstring": true
          },
          {
            "name": "quantum_consciousness_integration",
            "file": "gaia_tequmsa_architecture.py",
            "line_count": 19,
            "start_line": 87,
            "complexity_score": 17,
            "has_docstring": true
          },
          {
            "name": "_parse_profile",
            "file": "gaia_core.py",
            "line_count": 30,
            "start_line": 64,
            "complexity_score": 18,
            "has_docstring": true
          },
          {
            "name": "calculate_dimensional_expansion_rate",
            "file": "gaia_core.py",
            "line_count": 18,
            "start_line": 96,
            "complexity_score": 13,
            "has_docstring": true
          },
          {
            "name": "resistance_decay",
            "file": "gaia_core.py",
            "line_count": 34,
            "start_line": 116,
            "complexity_score": 12,
            "has_docstring": true
          },
          {
            "name": "recognition_pulse",
            "file": "tequmsa_nexus.py",
            "line_count": 34,
            "start_line": 21,
            "complexity_score": 18,
            "has_docstring": true
          },
          {
            "name": "activate_global_sequence",
            "file": "GAIA3000_DivineFeminineSource.py",
            "line_count": 14,
            "start_line": 32,
            "complexity_score": 11,
            "has_docstring": false
          },
          {
            "name": "global_deployment",
            "file": "GAIA3000_DivineFeminineSource.py",
            "line_count": 17,
            "start_line": 75,
            "complexity_score": 16,
            "has_docstring": false
          },
          {
            "name": "animate",
            "file": "gaia_avatar.py",
            "line_count": 81,
            "start_line": 28,
            "complexity_score": 27,
            "has_docstring": false
          },
          {
            "name": "validate_ethics",
            "file": "ethics/resonance_check.py",
            "line_count": 25,
            "start_line": 11,
            "complexity_score": 12,
            "has_docstring": true
          },
          {
            "name": "validate_resonance",
            "file": "ethics/resonance_check.py",
            "line_count": 25,
            "start_line": 37,
            "complexity_score": 13,
            "has_docstring": true
          },
          {
            "name": "__init__",
            "file": "scripts/check_secrets.py",
            "line_count": 41,
            "start_line": 21,
            "complexity_score": 34,
            "has_docstring": false
          },
          {
            "name": "scan_file_for_patterns",
            "file": "scripts/check_secrets.py",
            "line_count": 27,
            "start_line": 63,
            "complexity_score": 21,
            "has_docstring": true
          },
          {
            "name": "scan_directory",
            "file": "scripts/check_secrets.py",
            "line_count": 17,
            "start_line": 101,
            "complexity_score": 14,
            "has_docstring": true
          },
          {
            "name": "check_dependencies",
            "file": "scripts/check_secrets.py",
            "line_count": 65,
            "start_line": 119,
            "complexity_score": 66,
            "has_docstring": true
          },
          {
            "name": "check_configuration_security",
            "file": "scripts/check_secrets.py",
            "line_count": 46,
            "start_line": 185,
            "complexity_score": 44,
            "has_docstring": true
          },
          {
            "name": "generate_security_report",
            "file": "scripts/check_secrets.py",
            "line_count": 62,
            "start_line": 232,
            "complexity_score": 41,
            "has_docstring": true
          },
          {
            "name": "generate_security_runbook",
            "file": "scripts/check_secrets.py",
            "line_count": 184,
            "start_line": 295,
            "complexity_score": 14,
            "has_docstring": true
          },
          {
            "name": "load_analysis_reports",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 33,
            "start_line": 27,
            "complexity_score": 25,
            "has_docstring": true
          },
          {
            "name": "calculate_overall_optimization_score",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 32,
            "start_line": 61,
            "complexity_score": 30,
            "has_docstring": true
          },
          {
            "name": "consolidate_recommendations",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 38,
            "start_line": 94,
            "complexity_score": 31,
            "has_docstring": true
          },
          {
            "name": "generate_executive_summary",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 49,
            "start_line": 133,
            "complexity_score": 36,
            "has_docstring": true
          },
          {
            "name": "generate_markdown_report",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 103,
            "start_line": 196,
            "complexity_score": 50,
            "has_docstring": true
          },
          {
            "name": "run_report_generation",
            "file": "scripts/optimization_report_generator.py",
            "line_count": 42,
            "start_line": 300,
            "complexity_score": 13,
            "has_docstring": true
          },
          {
            "name": "check_claude_md_freshness",
            "file": "scripts/check_claude_md.py",
            "line_count": 46,
            "start_line": 15,
            "complexity_score": 27,
            "has_docstring": true
          },
          {
            "name": "suggest_updates",
            "file": "scripts/check_claude_md.py",
            "line_count": 31,
            "start_line": 114,
            "complexity_score": 23,
            "has_docstring": true
          },
          {
            "name": "main",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 41,
            "start_line": 327,
            "complexity_score": 11,
            "has_docstring": true
          },
          {
            "name": "analyze_python_dependencies",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 81,
            "start_line": 27,
            "complexity_score": 75,
            "has_docstring": true
          },
          {
            "name": "analyze_nodejs_dependencies",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 102,
            "start_line": 109,
            "complexity_score": 93,
            "has_docstring": true
          },
          {
            "name": "generate_optimization_recommendations",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 59,
            "start_line": 212,
            "complexity_score": 41,
            "has_docstring": true
          },
          {
            "name": "generate_report",
            "file": "scripts/dependency_optimizer.py",
            "line_count": 33,
            "start_line": 272,
            "complexity_score": 14,
            "has_docstring": true
          },
          {
            "name": "analyze_python_performance",
            "file": "scripts/performance_optimizer.py",
            "line_count": 53,
            "start_line": 28,
            "complexity_score": 45,
            "has_docstring": true
          },
          {
            "name": "analyze_python_function",
            "file": "scripts/performance_optimizer.py",
            "line_count": 27,
            "start_line": 82,
            "complexity_score": 17,
            "has_docstring": true
          },
          {
            "name": "analyze_javascript_performance",
            "file": "scripts/performance_optimizer.py",
            "line_count": 46,
            "start_line": 118,
            "complexity_score": 37,
            "has_docstring": true
          },
          {
            "name": "analyze_javascript_content",
            "file": "scripts/performance_optimizer.py",
            "line_count": 34,
            "start_line": 165,
            "complexity_score": 32,
            "has_docstring": true
          },
          {
            "name": "analyze_file_structure_performance",
            "file": "scripts/performance_optimizer.py",
            "line_count": 55,
            "start_line": 200,
            "complexity_score": 45,
            "has_docstring": true
          },
          {
            "name": "generate_python_optimizations",
            "file": "scripts/performance_optimizer.py",
            "line_count": 34,
            "start_line": 256,
            "complexity_score": 25,
            "has_docstring": true
          },
          {
            "name": "run_analysis",
            "file": "scripts/performance_optimizer.py",
            "line_count": 53,
            "start_line": 326,
            "complexity_score": 29,
            "has_docstring": true
          },
          {
            "name": "analyze_large_files",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 56,
            "start_line": 29,
            "complexity_score": 56,
            "has_docstring": true
          },
          {
            "name": "analyze_branches",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 86,
            "start_line": 86,
            "complexity_score": 86,
            "has_docstring": true
          },
          {
            "name": "analyze_commit_history",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 68,
            "start_line": 173,
            "complexity_score": 64,
            "has_docstring": true
          },
          {
            "name": "analyze_duplicate_content",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 36,
            "start_line": 242,
            "complexity_score": 34,
            "has_docstring": true
          },
          {
            "name": "generate_cleanup_recommendations",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 61,
            "start_line": 279,
            "complexity_score": 58,
            "has_docstring": true
          },
          {
            "name": "run_analysis",
            "file": "scripts/git_cleanup_optimizer.py",
            "line_count": 37,
            "start_line": 341,
            "complexity_score": 14,
            "has_docstring": true
          },
          {
            "name": "analyze_repository_structure",
            "file": "scripts/repo_health_check.py",
            "line_count": 64,
            "start_line": 27,
            "complexity_score": 52,
            "has_docstring": true
          },
          {
            "name": "analyze_git_health",
            "file": "scripts/repo_health_check.py",
            "line_count": 71,
            "start_line": 92,
            "complexity_score": 64,
            "has_docstring": true
          },
          {
            "name": "analyze_code_quality",
            "file": "scripts/repo_health_check.py",
            "line_count": 71,
            "start_line": 164,
            "complexity_score": 47,
            "has_docstring": true
          },
          {
            "name": "analyze_dependencies",
            "file": "scripts/repo_health_check.py",
            "line_count": 42,
            "start_line": 236,
            "complexity_score": 31,
            "has_docstring": true
          },
          {
            "name": "calculate_overall_score",
            "file": "scripts/repo_health_check.py",
            "line_count": 31,
            "start_line": 279,
            "complexity_score": 21,
            "has_docstring": true
          },
          {
            "name": "run_analysis",
            "file": "scripts/repo_health_check.py",
            "line_count": 39,
            "start_line": 311,
            "complexity_score": 16,
            "has_docstring": true
          },
          {
            "name": "main",
            "file": "scripts/generate_tests.py",
            "line_count": 77,
            "start_line": 310,
            "complexity_score": 27,
            "has_docstring": true
          },
          {
            "name": "analyze_python_file",
            "file": "scripts/generate_tests.py",
            "line_count": 56,
            "start_line": 28,
            "complexity_score": 58,
            "has_docstring": true
          },
          {
            "name": "generate_test_file",
            "file": "scripts/generate_tests.py",
            "line_count": 87,
            "start_line": 204,
            "complexity_score": 30,
            "has_docstring": true
          },
          {
            "name": "transition_factor",
            "file": "gaia_tequmsa/phase.py",
            "line_count": 16,
            "start_line": 25,
            "complexity_score": 11,
            "has_docstring": false
          },
          {
            "name": "chat",
            "file": "backend/ai_service.py",
            "line_count": 51,
            "start_line": 88,
            "complexity_score": 21,
            "has_docstring": true
          },
          {
            "name": "__init__",
            "file": "backend/thalia_recognition.py",
            "line_count": 16,
            "start_line": 119,
            "complexity_score": 17,
            "has_docstring": false
          },
          {
            "name": "test_chat_with_audio_generation",
            "file": "backend/test_ai_service.py",
            "line_count": 11,
            "start_line": 154,
            "complexity_score": 11,
            "has_docstring": true
          }
        ],
        "import_patterns": {
          "math": 4,
          "typing": 14,
          "__future__": 3,
          "asyncio": 1,
          "contextlib": 1,
          "json": 11,
          "logging": 1,
          "os": 11,
          "statistics": 1,
          "time": 1,
          "uuid": 2,
          "sys": 12,
          "PyQt6.QtWidgets": 1,
          "PyQt6.QtCore": 1,
          "PyQt6.QtGui": 1,
          "datetime": 8,
          "re": 2,
          "subprocess": 5,
          "pathlib": 10,
          "tempfile": 1,
          "argparse": 4,
          "ast": 2,
          "textwrap": 1,
          "numpy": 1,
          "phase": 1,
          "quantum": 1,
          "practice": 1,
          "flask": 1,
          "flask_cors": 1,
          "requests": 1,
          "openai": 1,
          "hashlib": 2,
          "pytest": 3,
          "thalia_recognition": 1,
          "dataclasses": 1,
          "unittest.mock": 1,
          "ai_service": 3,
          "universal_aten": 1,
          "sovereignty_filter": 1,
          "rubric.gaia_rubric": 1
        },
        "potential_optimizations": [
          {
            "type": "function_size",
            "description": "Found 23 large functions",
            "recommendation": "Consider breaking down large functions into smaller, focused functions",
            "priority": "medium",
            "impact": "maintainability"
          },
          {
            "type": "complexity",
            "description": "Found 58 complex functions",
            "recommendation": "Reduce cyclomatic complexity by extracting logic into helper functions",
            "priority": "medium",
            "impact": "maintainability"
          },
          {
            "type": "imports",
            "description": "Common imports across files: math, typing, json, os, sys",
            "recommendation": "Consider creating a common utilities module",
            "priority": "low",
            "impact": "organization"
          }
        ],
        "performance_score": 40
      },
      "javascript_analysis": {
        "total_files": 8,
        "large_files": [],
        "potential_issues": [
          {
            "type": "console_log",
            "file": "api/server.ts",
            "line": 15,
            "description": "Console.log statement (remove in production)"
          }
        ],
        "performance_score": 99
      },
      "file_analysis": {
        "total_files": 92,
        "large_files": [
          {
            "path": "TEQUMSA_SOURCE.tar.gz",
            "size_mb": 11.03
          }
        ],
        "deep_nesting": [],
        "file_type_distribution": {
          "": 4,
          ".md": 24,
          ".json": 9,
          ".txt": 2,
          ".py": 27,
          ".js": 5,
          ".html": 2,
          ".sh": 2,
          ".png": 7,
          ".gz": 1,
          ".yml": 2,
          ".yaml": 2,
          ".ts": 2,
          ".tex": 1,
          ".tf": 1,
          ".css": 1
        },
        "recommendations": [
          {
            "type": "large_files",
            "description": "Found 1 large files that may impact performance",
            "priority": "medium"
          }
        ]
      },
      "recommendations": [
        {
          "type": "function_size",
          "description": "Found 23 large functions",
          "recommendation": "Consider breaking down large functions into smaller, focused functions",
          "priority": "medium",
          "impact": "maintainability"
        },
        {
          "type": "complexity",
          "description": "Found 58 complex functions",
          "recommendation": "Reduce cyclomatic complexity by extracting logic into helper functions",
          "priority": "medium",
          "impact": "maintainability"
        },
        {
          "type": "imports",
          "description": "Common imports across files: math, typing, json, os, sys",
          "recommendation": "Consider creating a common utilities module",
          "priority": "low",
          "impact": "organization"
        },
        {
          "type": "large_files",
          "description": "Found 1 large files that may impact performance",
          "priority": "medium"
        }
      ],
      "summary": {
        "python_files": 27,
        "javascript_files": 8,
        "large_functions": 23,
        "performance_issues": 1,
        "optimization_opportunities": 4
      }
    }
  },
  "optimization_score": 76
}